syntax = "proto3";

package game_session;

// Request to start a session
message StartSessionRequest {
  string user_id = 1;
  string scenario_id = 2;
}

// Response after starting a session
message StartSessionResponse {
  string session_id = 1;
}

// Request to join an existing session
message JoinSessionRequest {
  string user_id = 1;
  string session_id = 2;
}

// Response after joining a session
message JoinSessionResponse {
}

// A single session summary
message SessionSummary {
  string session_id = 1;
  string scenario_id = 2;
  string state = 3;
  string player1 = 4;
  string player2 = 5;
}

// List of sessions
message SessionList {
  repeated SessionSummary sessions = 1;
}

// --- WebSocket messages ---

// Message sent when a session becomes ready (player2 joined)
message SessionReadyEvent {
  string session_id = 1;
  string player2 = 2;
}


// WebSocket envelope for incoming client -> server messages (optional)
message WsClientMessage {
  oneof payload {
    string ping = 1;
  }
}

// Sent when the creator starts the game
message GameStartedEvent {
  string session_id = 1;
}

message GameEndedEvent {
  string session_id = 1;
  string winner_id = 2;
  string reason = 3; // e.g., "Opponent disconnected"
}

message WsServerMessage {
  oneof payload {
    SessionReadyEvent session_ready = 1;
    GameStartedEvent game_started = 2;
    GameEndedEvent game_ended = 3;
  }
}
